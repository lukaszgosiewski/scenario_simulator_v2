name: Build and run

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  job1:
    name: BuildAndRun
    runs-on: ${{ matrix.runs_on }}
    timeout-minutes: 180
    container: ros:${{ matrix.rosdistro }}
    env:
      DEBIAN_FRONTEND: noninteractive
    strategy:
      fail-fast: false
      matrix:
        rosdistro: [humble]
        runs_on: [ubuntu-22.04]
        cmake_build_type: [Release] # Debug build type is currently unavailable. @TODO Fix problem and add Debug build.
    steps:      
      - name: Suppress warnings
        run: git config --global --add safe.directory '*'

      - name: Setup workspace
        run: mkdir -p src/scenario_simulator_v2

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: src/scenario_simulator_v2

      - uses: actions/checkout@v4
        with:
          repository: RobotecAI/scenario_simulator_v2_scenarios
          path: src/scenario_simulator_v2_scenarios

      - name: Search packages in this repository
        id: list_packages
        run: |
          echo package_list=$(colcon list --names-only | tr '\n' ' ') >> $GITHUB_OUTPUT

      - name: Show target packages
        run: |
          echo "Target packages: ${{ steps.list_packages.outputs.package_list }}"

      - name: Install dependencies
        run: |
          vcs import src < src/scenario_simulator_v2/dependency_${{ matrix.rosdistro }}.repos

      - name: Resolve rosdep and install colcon mixin
        run: |
          apt-get update
          apt-get install -y python3-pip python3-colcon-lcov-result lcov unzip gcovr
          pip3 install xmlschema==3.4.5 # xmlschema workaround (4.x occurs errors)
          rosdep update --include-eol-distros
          rosdep install -iy --from-paths src --rosdistro ${{ matrix.rosdistro }}
          colcon mixin add default https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml
          colcon mixin update default
        shell: bash


      - name: Build with SonarCloud Build Wrapper
        # Note: `-Wno-error=class-memaccess` is temporary workaround for aarch64 GCC error
        # This should be removed when Eigen is updated in Ubuntu package repository
        # See also: https://gitlab.com/libeigen/eigen/-/issues/2326
        run: |
          source /opt/ros/${{ matrix.rosdistro }}/setup.bash

          colcon build --symlink-install \
          --cmake-args \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }} \
            -DBUILD_CPP_MOCK_SCENARIOS=ON \
            -DBUILD_TESTING=true \
            -DCMAKE_CXX_FLAGS='-fprofile-arcs -ftest-coverage -Wno-error=class-memaccess' \
            -DCMAKE_C_FLAGS='-fprofile-arcs -ftest-coverage' \
            --packages-up-to ${{ steps.list_packages.outputs.package_list }}
        shell: bash