name: Build and run

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  job1:
    name: BuildAndRun
    runs-on: ubuntu-22.04
    timeout-minutes: 180
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:      
      - name: Suppress warnings
        run: git config --global --add safe.directory '*'

      - name: Setup workspace
        run: mkdir -p src/scenario_simulator_v2

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: src/scenario_simulator_v2

      - uses: actions/checkout@v4
        with:
          repository: RobotecAI/scenario_simulator_v2_scenarios
          path: src/scenario_simulator_v2_scenarios

      - name: Search packages in this repository
        id: list_packages
        run: |
          echo package_list=$(colcon list --names-only | tr '\n' ' ') >> $GITHUB_OUTPUT

      - name: Show target packages
        run: |
          echo "Target packages: ${{ steps.list_packages.outputs.package_list }}"

      # - name: Install dependencies
      #   run: |
      #     vcs import src < src/scenario_simulator_v2/dependency_${{ matrix.rosdistro }}.repos

      - name: Resolve rosdep and install colcon mixin
        run: |
          apt-get update
          apt-get install -y python3-pip python3-colcon-lcov-result lcov unzip gcovr
          apt-get install -y software-properties-common
          sudo add-apt-repository universe
          pip3 install xmlschema==3.4.5 # xmlschema workaround (4.x occurs errors)
          sudo apt update && sudo apt install curl -y
          sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
          sudo sh -c 'echo "deb [arch=amd64 signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros-latest.list'
          sudo apt update
          sudo apt install ros-humble-desktop
          sudo apt-get install ros-humble-ament-cmake-core

          mkdir -p ~/scenario_simulator_ws/src
          cd ~/scenario_simulator_ws/src
          git clone https://github.com/tier4/scenario_simulator_v2.git
          cd scenario_simulator_v2
          vcs import external < dependency_humble.repos
          cd ~/scenario_simulator_ws
          source /opt/ros/humble/setup.bash
          rosdep install -iry --from-paths src/scenario_simulator_v2 --rosdistro humble
          colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release

          # rosdep update --include-eol-distros
          # rosdep install -iy --from-paths src --rosdistro ${{ matrix.rosdistro }}
          # colcon mixin add default https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml
          # colcon mixin update default
        shell: bash

      # - name: Build 
      #   # Note: `-Wno-error=class-memaccess` is temporary workaround for aarch64 GCC error
      #   # This should be removed when Eigen is updated in Ubuntu package repository
      #   # See also: https://gitlab.com/libeigen/eigen/-/issues/2326
      #   run: |
      #     source /opt/ros/${{ matrix.rosdistro }}/setup.bash
      #   shell: bash

      # - name: Run GV Demo ActionE
      #   uses: lukaszgosiewski/guidline@main
      #   with:
      #     REPO_NAME: "my-org/my-cpp-project"
      #     BRANCH_NAME: "main"
      #     COMMIT_HASH: ${{ github.sha }}
      #     PATH_TO_CODE: "/__w/scenario_simulator_v2/scenario_simulator_v2/src"
      #     PATH_TO_BUILDING_SCRIPT: "/__w/scenario_simulator_v2/scenario_simulator_v2/src/scenario_simulator_v2/build.sh"
      #     AUTH_URL: "https://auth.qa.soc.plaxidityx.com/auth/realms/cloud/protocol/openid-connect/token"
      #     APP_URL: "vvm-qa.a.qa.soc.plaxidityx.com/public-api/guideline/v1/guideline-violations"
      #     USERNAME: "xxx"
      #     PASSWORD: "yyy"
      #     TOKEN: ${{ secrets.PRIVATE_ACTIONS_PAT }}

      